#include <bits/stdc++.h> 
bool isSafe(int row,int col,vector<vector<int>> &board,int val){
    for(int i=0;i<board.size();i++){
        //row check and col  check
        if(board[row][i] == val || board[i][col]==val){
            return false;
        }
        //3*3 ka matrix check krna h toh ....
        //this formula is use to check the row and Column in the Sudoko from row to Column 
        if(board[3*(row/3)+i/3][3*(col/3)+i%3]==val){
            return false;
        }
    }
    return true;
}
bool solve(vector<vector<int>> &board){
    int n =board[0].size();

    for(int row=0;row<n;row++){
        for(int col=0;col<n;col++){
           if(board[row][col] == 0) {
               //cell empty
               for(int val =1;val<=9;val++){
                   if(isSafe(row,col,board,val)){
                       board[row][col]=val;


                       bool isSolutionPossible = solve(board);
                       if(isSolutionPossible){
                           return true;
                       }
                       else{
                           //backtracing
                           board[row][col] = 0;
                       }
                   }
               }
               return false;
           }
        }
    }
    return true;
}
void solveSudoku(vector<vector<int>>& sudoku)
{
    solve(sudoku);
}
